<apex:page showHeader="false" sidebar="false" tabStyle="seq__Task__c" controller="seq.DBoardController">
    <head>
        <apex:includeScript value="{!URLFOR($Resource.seq__SequencerLibrary, '/media/js/jquery-1.7.1.min.js')}"  />
        <apex:includeScript value="{!URLFOR($Resource.seq__SequencerLibrary, '/media/js/jquery-ui-1.8.17.custom.min.js')}"  />
        <apex:includeScript value="{!URLFOR($Resource.seq__SequencerLibrary, '/media/js/jquery.dataTables.min.js')}"  />
        <apex:stylesheet value="{!URLFOR($Resource.seq__SequencerLibrary, '/media/css/themes/sf/jquery-ui-1.8.17.custom.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.seq__SequencerLibrary, '/media/css/demo_page.css')}"  />
        <apex:stylesheet value="{!URLFOR($Resource.seq__SequencerLibrary, '/media/css/demo_table.css')}"  />
        <apex:stylesheet value="{!URLFOR($Resource.seq__SequencerLibrary, '/media/css/site_jui.css')}"  />
        <apex:stylesheet value="{!URLFOR($Resource.seq__SequencerLibrary, '/media/css/demo_table_jui.css')}"  />
        <style>
            .dataTables_info { padding-top: 0; }
            .dataTables_paginate { padding-top: 0; }
            .css_right { float: right; }
            #example_wrapper .fg-toolbar { font-size: 0.8em }
            #theme_links span { float: left; padding: 2px 10px; }
            #example tbody tr.trHighlightedWrnE { background-color: #E6FF99; }
            #example tbody tr.trHighlightedWrnE td.sorting_1{ background-color: #acbf72; }
            #example tbody tr.trHighlightedExpE { background-color: #ECC3BF; }
            #example tbody tr.trHighlightedExpE td.sorting_1{ background-color: #DB9EA6; }
            #example tbody tr.trHighlightedWrnO { background-color: #FFF999; }
            #example tbody tr.trHighlightedWrnO td.sorting_1{ background-color: #CCCC66; }
            #example tbody tr.trHighlightedExpO { background-color: #FFCCCC; }
            #example tbody tr.trHighlightedExpO td.sorting_1{ background-color: #FFAACC; }
        </style>
        <script type="text/javascript">
            var __sfdcSessionId = '{!GETSESSIONID()}';
        </script>
        <script src="../../soap/ajax/21.0/connection.js" type="text/javascript"></script>
        <script src="../../soap/ajax/21.0/apex.js" type="text/javascript"></script>
        <script type="text/javascript" src="https://www.google.com/jsapi"></script>
        <script type="text/javascript">
          google.load("visualization", "1", {packages:["corechart"]});
          //google.setOnLoadCallback(drawOwnerTaskChart);
          function drawOwnerTaskChart(arr, w) {
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Assigned Owner');
            data.addColumn('number', 'Incomplete Tasks');
            data.addColumn('number', 'Not Started');
            data.addColumn('number', 'In Progress');
            data.addRows(arr);
    
            var options = {
              width: 950, height: 250,
              title: 'Owner Tasks Report',
              hAxis: {title: 'Assigned Owner', titleTextStyle: {color: 'red'}},
              chartArea: {top: 30, right: 0, bottom: 0, left: 70, width:"80%"},
              animation:{
                duration: 1000
              }
            };
    
            var chart = new google.visualization.ColumnChart(document.getElementById('chartOwner'));
            
            chart.draw(data, options);
          }
          
          function drawDDateTaskChart(arr, w) {
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Due Date');
            data.addColumn('number', 'Incomplete Tasks');
            data.addColumn('number', 'Not Started');
            data.addColumn('number', 'In Progress');
            data.addRows(arr);
    
            var options = {
              width: (w-30), height: 250,
              title: 'Due date Tasks Report',
              hAxis: {title: 'Due date', titleTextStyle: {color: 'red'}},
              chartArea: {top: 30, right: 0, bottom: 0, left: 70, width:"80%"},
              animation:{
                duration: 1000
              }
            };
    
            var chart = new google.visualization.ColumnChart(document.getElementById('chartDDate'));
            chart.draw(data, options);
          }
        </script>

        <script>
            var arrOwnerTask = new Array();
            var arrDDateTask = new Array();
            (function($) {
                $.fn.dataTableExt.oApi.fnGetFilteredData = function ( oSettings ) {
                    var a = [];
                    for ( var i=0, iLen=oSettings.aiDisplay.length ; i<iLen ; i++ ) 
                    {    
                        a.push(oSettings.aoData[ oSettings.aiDisplay[i] ]._aData);
                    }
                    return a;
                }
                //.........all column serach footer start....
                $.fn.dataTableExt.oApi.fnGetColumnData = function ( oSettings, iColumn, bUnique, bFiltered, bIgnoreEmpty ) {
                    // check that we have a column id
                    if ( typeof iColumn == "undefined" ) return new Array();
                     
                    // by default we only wany unique data
                    if ( typeof bUnique == "undefined" ) bUnique = true;
                     
                    // by default we do want to only look at filtered data
                    if ( typeof bFiltered == "undefined" ) bFiltered = true;
                     
                    // by default we do not wany to include empty values
                    if ( typeof bIgnoreEmpty == "undefined" ) bIgnoreEmpty = true;
                     
                    var aiRows;
                     
                    // use only filtered rows
                    if (bFiltered == true) aiRows = oSettings.aiDisplay;
                    // use all rows
                    else aiRows = oSettings.aiDisplayMaster; // all row numbers
                 
                    // set up data array   
                    var asResultData = new Array();
                     
                    for (var i=0,c=aiRows.length; i<c; i++) {
                        iRow = aiRows[i];
                        var aData = this.fnGetData(iRow);
                        var sValue = aData[iColumn];
                         
                        // ignore empty values?
                        if (bIgnoreEmpty == true && sValue.length == 0) continue;
                 
                        // ignore unique values?
                        else if (bUnique == true && jQuery.inArray(sValue, asResultData) > -1) continue;
                         
                        // else push the value onto the result data array
                        else asResultData.push(sValue);
                    }
                     
                    return asResultData;
                }}(jQuery));
                //..........All search footer end.....

//..........max min start
/*
$(function(){
    $.fn.dataTableExt.afnFiltering.push(
    function( oSettings, aData, iDataIndex ) {
        var iFini = document.getElementById('minDDate').value;
        var iFfin = document.getElementById('maxDDate').value;
        var iStartDateCol = 1;
        var iEndDateCol = 1;
         
        iFini=iFini.substring(6,10) + iFini.substring(3,5)+ iFini.substring(0,2)
        iFfin=iFfin.substring(6,10) + iFfin.substring(3,5)+ iFfin.substring(0,2)       
         
        var datofini=aData[iStartDateCol].substring(6,10) + aData[iStartDateCol].substring(3,5)+ aData[iStartDateCol].substring(0,2);
        var datoffin=aData[iEndDateCol].substring(6,10) + aData[iEndDateCol].substring(3,5)+ aData[iEndDateCol].substring(0,2);
         
        if ( iFini == "" && iFfin == "" )
        {
            return true;
        }
        else if ( iFini <= datofini && iFfin == "")
        {
            return true;
        }
        else if ( iFfin >= datoffin && iFini == "")
        {
            return true;
        }
        else if (iFini <= datofini && iFfin >= datoffin)
        {
            return true;
        }
        return false;
    });
});
*/ 
//......Max min end.........
 
            function fnCreateSelect( aData )
            {
                var r='<select><option value=""></option>', i, iLen=aData.length;
                for ( i=0 ; i<iLen ; i++ )
                {
                    r += '<option value="'+aData[i]+'">'+aData[i]+'</option>';
                }
                return r+'</select>';
            }
        </script>
        <script>
            var url = document.URL;
            var idPrefix = '';
            var hgt1 = '';
            var arr5 = url.split("?")[1].split("&");
            for(var k = 0; k < arr5.length; k ++)
            {
                var arr4 = arr5[k].split("=");
                if(arr4[0] == "prefix")
                {
                    idPrefix = arr4[1];
                } 
                if(arr4[0] == "hgt")
                {
                    hgt1 = arr4[1];
                }    
            }
            var curIndex = -1;
            var curIndex1 = 0;
            var id = -1; 
               
            $(function () 
            {                
                var tabDiv;
                var $tabs;
                
                var linkR = '';
                function tabDef(ttl)
                {
                    $(parent.parent.document).find("div").each(function(){
                        if($(this).attr("id") == "tabs")
                        {
                            tabDiv = $(this);
                            var tabTop = tabDiv.position().top;
                            //alert("hgt2 - "+hgt1);
                            var hgt = parseInt(hgt1);
                            $tabs = tabDiv.tabs({
                                tabTemplate: "<li><a href='#{href}'>#{label}</a> <span class='ui-icon ui-icon-close'>Remove Tab</span></li>",
                                add: function( event, ui ) 
                                {        
                                    
                                    //alert("2->"+hgt);
                                    tabDiv.children("#tabs-"+ttl).append("<iframe id='"+frmId+"' src='"+linkR+"' style='width:100%; height:"+(hgt)+"px; overflow:visible;' scrolling='no' marginwidth='0' marginheight='0' frameborder='0' vspace='0' hspace='0'/>");
                                    //alert($(tabDiv).html());
                                    
                                }
                            });
                            
                            $(this).children("ul").children("li").children("a").click(function(){
                                var hrf = $(this).attr("href").split("#")[1];
                                //alert("2-"+hrf);
                                $(this).parent().parent().children("li").each(function(){
                                    $(this).attr("class", "ui-state-default ui-corner-top");
                                });
                                $(this).parent().attr("class", "ui-state-default ui-corner-top ui-tabs-selected ui-state-active");
                                
                                $(this).parent().parent().parent().children("div").each(function(){
                                    $(this).addClass("ui-tabs-hide");
                                });
                                $(this).parent().parent().parent().children("div").each(function(){
                                    //alert($(this).attr("id")+" == "+hrf)
                                    if($(this).attr("id") == hrf)
                                    {
                                        $(this).removeClass("ui-tabs-hide");
                                    }    
                                });        
                            });
                                
                        }
                    });
                }
                
                /******/
                
                $(parent.parent.document).find("div").each(function(){
                    if($(this).attr("id") == "tabs")
                    {
                        $(this).children("ul").children("li").children("a").click(function(){
                            //alert("check3");
                            var hrf = $(this).attr("href").split("#")[1];
                            //alert("3-"+hrf);
                            $(this).parent().parent().children("li").each(function(){
                                $(this).attr("class", "ui-state-default ui-corner-top");
                            });
                            $(this).parent().attr("class", "ui-state-default ui-corner-top ui-tabs-selected ui-state-active");
                            
                            $(this).parent().parent().parent().children("div").each(function(){
                                $(this).addClass("ui-tabs-hide");
                            });
                            $(this).parent().parent().parent().children("div").each(function(index){
                                //alert($(this).attr("id")+" == "+hrf)
                                if($(this).attr("id") == hrf)
                                {
                                    $(this).removeClass("ui-tabs-hide");
                                    curIndex1 = index;
                                }    
                            });        
                        });
                    }
                });   
                
                function fetchCurrentTabIndex()
                {
                    $(parent.parent.document).find("div").each(function(){
                        if($(this).attr("id") == "tabs")
                        {
                            $(this).children("div.ui-tabs-panel").each(function(index){  
                                //alert("has it = "+$(this).hasClass("ui-tabs-hide"));                              
                                if(!$(this).hasClass("ui-tabs-hide"))
                                {
                                    //alert($(this).attr("id")+", "+index+", "+$(this).attr("id"));
                                    curIndex1 = index;
                                }
                            });
                        }
                    }); 
                }        
                /******/
                
                function addTab(name, title, link) 
                {
                    linkR = link;
                    var st = "#tabs-" + title;
                    frmId = 'frame-' + title; 
                    tabDef(title);
                    var isPresent = 0;
                    $(parent.parent.document).find("a").each(function(){
                        if($(this).attr("href") == st)
                        {
                            isPresent = 1;
                        }
                    });    
                    if(isPresent == 1)    //($(st).html() != null ) 
                    {
                        $tabs.tabs("select", st);
                    } 
                    else 
                    {
                        fetchCurrentTabIndex();
                        curIndex1 ++;
                        //alert("Index = "+curIndex1)
                        $tabs.tabs( "add", st, name, curIndex1);
                        $tabs.tabs("select", st);
                    }
                }
                
                oTable = $('#example').dataTable({ 
                            bJQueryUI: true,
                            "sPaginationType": "full_numbers",
                            "oLanguage": {
                                "sSearch": "Search all columns:"
                            },
                            "aLengthMenu": [10,25,50,100],
                            "iDisplayLength" : 10,//trHighlighted
                            "fnRowCallback": function( nRow, aData, iDisplayIndex ) 
                            {
                                //alert(iDisplayIndex);
                                var rem = iDisplayIndex % 2;
                                if(aData[1].trim() != "")
                                {
                                    var d1 = Date.parse(aData[1].trim());; 
                                    var d2 = new Date();
                                    var diff = d1 - d2;
                                    var days = Math.round(diff/(1000*60*60*24));
                                    //alert(days);
                                    if (days >= 0)
                                    {
                                        if(rem == 0)
                                            $(nRow).addClass("trHighlightedWrnE");
                                        else
                                            $(nRow).addClass("trHighlightedWrnO");   
                                    }
                                    else
                                    {
                                        if(rem == 0)
                                            $(nRow).addClass("trHighlightedExpE");
                                        else
                                            $(nRow).addClass("trHighlightedExpO");
                                    }
                                }
                                return nRow;
                            }
                });
                callDataFetcher();
                
                function callDataFetcher()
                {
                    arrOwnerTask = [];
                    arrDDateTask = [];
                    var arr = oTable.fnGetFilteredData();
                    //alert(arr.length+", "+arr[0].length);
                    for(var i = 0; i < arr.length; i ++)
                    {
                        var res = isOwnerPresent(arr[i][0]);
                        if(res == -1)
                        {
                            var totTask = 1;
                            var notStarted = 0;
                            var inProgress = 0;
                            var ownerObj = new Object();
                            ownerObj.name = arr[i][0];
                            if(arr[i][4] == "Not Started")
                            {
                                notStarted ++;
                            }
                            if(arr[i][4] == "In Progress")
                            {
                                inProgress ++;
                            }
                            ownerObj.totalTask = totTask;
                            ownerObj.notStarted = notStarted;
                            ownerObj.inProgress = inProgress;
                            arrOwnerTask.push(ownerObj);
                        }
                        else
                        {
                            var ownerObj = arrOwnerTask[res];
                            totTask = ownerObj.totalTask;
                            notStarted = ownerObj.notStarted;
                            inProgress = ownerObj.inProgress;
                            totTask ++;
                            if(arr[i][4] == "Not Started")
                            {
                                notStarted ++;
                            }
                            if(arr[i][4] == "In Progress")
                            {
                                inProgress ++;
                            }
                            ownerObj.totalTask = totTask;
                            ownerObj.notStarted = notStarted;
                            ownerObj.inProgress = inProgress;
                            arrOwnerTask.splice(res, 1);
                            arrOwnerTask[res] = ownerObj;
                        }
                    }
                    
                    //arrDDateTask 
                    for(var i = 0; i < arr.length; i ++)
                    {
                        if(arr[i][1].trim() != "")
                        {
                            var res = isDDatePresent(arr[i][1]);
                            if(res == -1)
                            {
                                var totTask = 1;
                                var notStarted = 0;
                                var inProgress = 0;
                                var ddateObj = new Object();
                                ddateObj.date = arr[i][1];
                                if(arr[i][4] == "Not Started")
                                {
                                    notStarted ++;
                                }
                                if(arr[i][4] == "In Progress")
                                {
                                    inProgress ++;
                                }
                                ddateObj.totalTask = totTask;
                                ddateObj.notStarted = notStarted;
                                ddateObj.inProgress = inProgress;
                                arrDDateTask.push(ddateObj);
                            }
                            else
                            {
                                var ddateObj = arrDDateTask[res];
                                totTask = ddateObj.totalTask;
                                notStarted = ddateObj.notStarted;
                                inProgress = ddateObj.inProgress;
                                totTask ++;
                                if(arr[i][4] == "Not Started")
                                {
                                    notStarted ++;
                                }
                                if(arr[i][4] == "In Progress")
                                {
                                    inProgress ++;
                                }
                                ddateObj.totalTask = totTask;
                                ddateObj.notStarted = notStarted;
                                ddateObj.inProgress = inProgress;
                                arrDDateTask.splice(res, 1);
                                arrDDateTask[res] = ddateObj;
                            }
                        }
                    }
                    var $body = $(this.ie6 ? document.body : document);
                    var width = $body.width();
                    //call owner task chart
                    var arrOwnerTask1 = new Array();
                    for(var i = 0; i < arrOwnerTask.length; i ++)
                    {
                        var curOwner = arrOwnerTask[i];
                        var arrOT = [];
                        arrOT.push(curOwner.name);
                        arrOT.push(parseInt(curOwner.totalTask));
                        arrOT.push(parseInt(curOwner.notStarted));
                        arrOT.push(parseInt(curOwner.inProgress));
                        arrOwnerTask1.push(arrOT);
                    }
                    drawOwnerTaskChart(arrOwnerTask1, width);
                    
                    //call due date task chart
                    var arrDDateTask1 = new Array();
                    for(var i = 0; i < arrDDateTask.length; i ++)
                    {
                        var curDDate = arrDDateTask[i];
                        var arrOT = [];
                        arrOT.push(curDDate.date);
                        arrOT.push(parseInt(curDDate.totalTask));
                        arrOT.push(parseInt(curDDate.notStarted));
                        arrOT.push(parseInt(curDDate.inProgress));
                        arrDDateTask1.push(arrOT);
                    }
                    drawDDateTaskChart(arrDDateTask1, width);
                    //alert("1 - "+arrDDateTask.length+", "+arrDDateTask[0].date+", "+arrDDateTask[0].notStarted +", "+arrDDateTask[0].inProgress);
                }
                
                function isOwnerPresent(name1)
                {
                    var ret = -1;
                    for(var i = 0; i < arrOwnerTask.length; i ++)
                    {
                        if(arrOwnerTask[i].name == name1)
                        {
                            ret = i;
                            break;
                        }
                    }
                    return ret;
                }
                
                function isDDatePresent(date1)
                {
                    var ret = -1;
                    for(var i = 0; i < arrDDateTask.length; i ++)
                    {
                        if(arrDDateTask[i].date == date1)
                        {
                            ret = i;
                            break;
                        }
                    }
                    return ret;
                }
                /*
                //Max min check
                $('#minDDate').keyup( function() { oTable.fnDraw(); } );
                $('#maxDDate').keyup( function() { oTable.fnDraw(); } );
                */
                $("#example tfoot th").each( function ( i ) {
                    this.innerHTML = fnCreateSelect( oTable.fnGetColumnData(i) );
                    $('select', this).change( function () {
                        oTable.fnFilter( $(this).val(), i );
                        callDataFetcher();
                    } );
                } );
                
                $('#example tbody tr').live('click', function () {
                    addTab($(this).attr("title"), $(this).attr("id"), $(this).attr("dir"));   
                });
                
            } );
        </script>
    </head> 
    <body id="index" class="grid_2_3">
    <!--
    <div id="fw_container">
        <div id="fw_content">
            <div class="full_width">-->
                <br />
                <span style="float: left; width: 30%; color: #0066FF; font-size: 20px; font-weight: bold;">
                    &nbsp;&nbsp;<apex:outputLabel value="{!objName} Task Report:"></apex:outputLabel>
                </span>
                <br /><br />
                <apex:pageBlock >
                <apex:pageBlockSection title="Owner Tasks Report">
                <div id="chartOwner"></div>
                </apex:pageBlockSection>
                
                <apex:pageBlockSection title="Due date Tasks Report">
                <div id="chartDDate"></div>
                </apex:pageBlockSection>
                
                <br />
                
                <!--<form id="selectSearch">-->
                <span style="float: left; width: 30%; color: #0066FF; font-size: 20px; font-weight: bold;">
                    &nbsp;&nbsp;<apex:outputLabel value="{!objName} Task Table"></apex:outputLabel>
                </span>
                <!--
                <span style="float: right; width: 70%; color: #0066FF; font-size: 15px; font-weight: bold;">
                    Task due date between: 
                </span>
                -->
                <br />
                <center>
                    <table cellpadding="0" cellspacing="0" border="0" class="display" id="example" width="80%">
                        <thead>
                            <tr>
                                <th width="20%">Assigned To</th>
                                <th width="15%">Due Date (MM/DD/YYYY)</th>
                                <th width="10%">Priority</th>
                                <th width="20%">Name</th>
                                <th width="10%">Status</th>
                                <th width="25%">Subject</th>
                            </tr>
                        </thead>
                        <tbody>
                            <apex:repeat value="{!filteredTaskList}" var="t" id="theRepeat">
                              <tr id="{!t.Id}" title="{!t.Subject}" dir="{!$Site.Prefix}/apex/ObjectDetailsContent?id={!t.Id}" class="objectDet" style="cursor: pointer;">
                                 <td>{!t.Owner.name}</td>
                                 <td>
                                     <apex:outputText value="{0,date,MM'/'dd'/'yyyy}">
                                         <apex:param value="{!t.ActivityDate}" /> 
                                     </apex:outputText>
                                 </td>
                                 <td>{!t.Priority}</td>
                                 <td>{!t.What.name}</td>
                                 <td class="center">{!t.Status}</td>
                                 <td>{!t.Subject}</td>
                              </tr>
                            </apex:repeat>
                        </tbody>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                    <!--
                    <font color="#0066FF" size="3">Search Tasks between :</font>
                    &nbsp;<input type="text" id="minDDate"/>
                    &nbsp;<input type="text" id="maxDDate"/>-->
                </center>
                </apex:pageBlock>
                <!--</form>-->
                <!--
                </div>
            </div>  
        </div>-->
    </body>   
</apex:page>